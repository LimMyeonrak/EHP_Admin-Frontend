{"version":3,"file":"static/js/531.ee675392.chunk.js","mappings":"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","sources":["components/customDownload/index.tsx","components/rangePicker/index.tsx","pages/popup/comp/PopupForm.tsx","pages/popup/new/NewPopupContainer.tsx","pages/popup/new/index.tsx","types/Common/PopupOptions.ts"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { Upload, Button, Image, Row } from 'antd';\nimport { DeleteOutlined, DownloadOutlined } from '@ant-design/icons';\nimport modal from 'helper/customModal';\nimport { uniqueId } from 'lodash';\nimport useLoding from 'hooks/useLoding';\nimport { apiFileDownload } from 'api/common/commonApi';\n\nexport type FormLayout = 'horizontal' | 'inline' | 'preview';\n\ninterface CustomDownloadProps {\n    downloadFiles: any[];\n    setDownloadFiles?: (e) => void;\n    readonly?: boolean;\n}\n\nconst CustomDownload: React.FunctionComponent<CustomDownloadProps> = props => {\n    const { downloadFiles, setDownloadFiles, readonly } = props;\n    const { setLoading } = useLoding();\n    const onRemove = file => {\n        const index = downloadFiles.indexOf(file);\n        const newFileList = downloadFiles.slice();\n        newFileList.splice(index, 1);\n        setDownloadFiles(newFileList);\n    };\n    useEffect(() => {\n        return () => {\n            //\n        };\n    }, [downloadFiles]);\n\n    return (\n        <div style={{ marginBottom: '5px' }}>\n            {downloadFiles &&\n                downloadFiles.length > 0 &&\n                downloadFiles.map(item => {\n                    return (\n                        <Row\n                            key={uniqueId()}\n                            style={{\n                                display: 'inline-flex',\n                                border: '1px solid #e0e0e0',\n                                padding: '4px 10px',\n                                marginTop: '5px',\n                                marginRight: '5px',\n                                fontSize: '14px'\n                            }}\n                            align=\"middle\"\n                            title={item.fileName}>\n                            <DownloadOutlined />\n                            <div\n                                style={{\n                                    width: `119px`,\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    whiteSpace: 'nowrap',\n                                    cursor: 'pointer',\n                                    marginLeft: '5px'\n                                }}\n                                onClick={() => {\n                                    setLoading(apiFileDownload({ idx: item.idx, fileName: item.fileName }));\n                                }}>\n                                {item.fileName}\n                            </div>\n                            {readonly === undefined && (\n                                <div\n                                    style={{ width: `20px`, cursor: 'pointer' }}\n                                    onClick={() => {\n                                        onRemove(item);\n                                    }}>\n                                    <DeleteOutlined size={20} />\n                                </div>\n                            )}\n                        </Row>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default CustomDownload;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { Col, DatePicker, Form, FormInstance, Row, Select } from 'antd';\nimport moment from 'moment';\n\ninterface FilterRangePickerProps {\n    form: FormInstance<any>; // form 전달\n    defaultRange?: number; // 초기 설정 값\n}\n\nconst RangePicker: React.FunctionComponent<FilterRangePickerProps> = props => {\n    const { form, defaultRange = 30 } = props;\n    const [range, setRange] = useState(defaultRange);\n\n    const onChangeDateRange = e => {\n        setRange(e);\n        if (e !== 999) {\n            form.setFieldsValue({ startDate: moment().add(-e, 'days'), endDate: moment() });\n        }\n    };\n\n    const onChange = () => {\n        setRange(999);\n    };\n\n    return (\n        <Row align=\"middle\" justify=\"start\">\n            <Form.Item\n                name=\"startDate\"\n                label=\"\"\n                //initialValue={defaultRange !== 999 ? moment().add(-defaultRange, 'days') : moment()}\n                initialValue={moment()}\n                style={{ width: '130px', marginLeft: '10px', marginRight: '10px' }}>\n                <DatePicker onChange={onChange} />\n            </Form.Item>\n            <Col>~</Col>\n            <Form.Item\n                name=\"endDate\"\n                label=\"\"\n                initialValue={moment()}\n                style={{ width: '130px', marginLeft: '10px', marginRight: '10px' }}>\n                <DatePicker onChange={onChange} />\n            </Form.Item>\n        </Row>\n    );\n};\n\nexport default RangePicker;\n","/* eslint-disable */\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { Row, Col, Select, Input, Button, Checkbox, Form, Radio, Collapse, Space } from 'antd';\nimport { CustomUpload, Editor, FilterRangePicker } from 'components';\nimport RangePicker from 'components/rangePicker';\nimport CustomDownload from 'components/customDownload';\nimport { emptyString } from 'helper/recycle';\nimport { uniqueId } from 'lodash';\nimport moment from 'moment';\nimport ManagerPopup from 'Popups/Manager';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n    typeOptions,\n    useOptions,\n    projectOptions,\n    companyOptions,\n    closeButtonUseOptions,\n    closeButtonCookieOptions,\n    buttonOptions\n} from 'types/Common/PopupOptions';\n\nconst NoticeForm = props => {\n    const {\n        mode,\n        form,\n        content,\n        setContent,\n        uploadFiles,\n        setUploadFiles,\n        boadrFiles,\n        setBoadrFiles,\n        onClickDownLoad,\n        setIsChaged,\n        userInfo\n    } = props;\n    const [visibleUrlInput, setVisibleUrlInput] = useState<boolean>(false);\n    const [imgMsgValue, setImgMsgValue] = useState(0);\n    const onchange = e => {\n        if (content !== e) {\n            form.setFieldsValue({ content: e });\n            setContent(e);\n            setIsChaged(true);\n        }\n    };\n\n    const onChangePopupType = e => {\n        setImgMsgValue(e);\n    };\n\n    const fileMsg = () => {\n        switch (imgMsgValue) {\n            case 1:\n                return <p>* 이미지는 000px X 000px로 업로드하여 주세요.(확장자 .png) 풀팝업 사이즈 안내 </p>;\n            case 2:\n                return <p>* 이미지는 000px X 000px로 업로드하여 주세요.(확장자 .png) 바텀시트 팝업 사이즈 안내</p>;\n            case 3:\n                return <p>* 이미지는 000px X 000px로 업로드하여 주세요.(확장자 .png) 일반 팝업 사이즈 안내</p>;\n            default:\n                return <p></p>;\n        }\n    };\n\n    const onChangeButtonSet = e => {\n        setVisibleUrlInput(e.target.value === 1);\n    };\n\n    const onChangeNoticeTarget = e => {\n        //setVisibleTargetSearch(e === 3);\n    };\n\n    const setManager = e => {\n        const id = e.map(item => {\n            return item.id;\n        });\n        form.setFieldsValue({ noticeTargetIds: id.toString() });\n    };\n\n    useEffect(() => {\n        fileMsg();\n        return () => {\n            //\n        };\n    }, [imgMsgValue]);\n\n    useEffect(() => {\n        setIsChaged(false);\n        return () => {\n            //\n        };\n    }, []);\n\n    return (\n        <Form\n            layout=\"horizontal\"\n            form={form}\n            onChange={() => {\n                setIsChaged(true);\n            }}>\n            <Row className=\"content__contentbox__table\">\n                <Form.Item\n                    labelCol={{ span: 0 }}\n                    wrapperCol={{ span: 0 }}\n                    name=\"articleIdx\"\n                    hidden\n                    label=\"\"\n                    initialValue={null}>\n                    <Input />\n                </Form.Item>\n                <Col className=\"label\" span={4}>\n                    노출여부\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Form.Item labelCol={{ span: 0 }} wrapperCol={{ span: 10 }} name=\"isUse\" label=\"\" initialValue={0}>\n                        <Radio.Group options={useOptions} />\n                    </Form.Item>\n                </Col>\n\n                <Col className=\"label required\" span={4}>\n                    팝업타입\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Form.Item name=\"popupType\" label=\"\" style={{ width: '200px' }} initialValue={0}>\n                        <Select onChange={onChangePopupType} options={typeOptions} />\n                    </Form.Item>\n                </Col>\n\n                <Col className=\"label required\" span={4}>\n                    기업 선택\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Row justify=\"start\">\n                        <Form.Item name=\"companyTarget\" label=\"\" style={{ width: '200px' }} initialValue={0}>\n                            <Select onChange={onChangeNoticeTarget} options={companyOptions} />\n                        </Form.Item>\n\n                        <Form.Item name=\"projectTarget\" label=\"\" style={{ width: '200px' }} initialValue={0}>\n                            <Select onChange={onChangeNoticeTarget} options={projectOptions} />\n                        </Form.Item>\n                    </Row>\n                </Col>\n\n                <Col className=\"label required\" span={4}>\n                    제목\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Form.Item\n                        labelCol={{ span: 0 }}\n                        wrapperCol={{ span: 24 }}\n                        name=\"title\"\n                        label=\"\"\n                        rules={[{ required: true, message: '제목을 입력해주세요.' }]}>\n                        <Input />\n                    </Form.Item>\n                </Col>\n\n                <Col className=\"label required\" span={4}>\n                    노출기간\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <RangePicker form={form} />\n                </Col>\n\n                <Col className=\"label\" span={4}>\n                    첨부\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\n                        <CustomDownload downloadFiles={boadrFiles} setDownloadFiles={setBoadrFiles} />\n                        <CustomUpload\n                            uploadFiles={uploadFiles}\n                            setUploadFiles={setUploadFiles}\n                            maxCount={boadrFiles ? 3 - boadrFiles.length : 3}\n                        />\n                        {fileMsg()}\n                    </Space>\n                </Col>\n\n                <Col className=\"label required\" span={4}>\n                    닫기 버튼 설정\n                </Col>\n\n                <Col className=\"data\" span={20}>\n                    <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\n                        <Form.Item\n                            labelCol={{ span: 0 }}\n                            wrapperCol={{ span: 10 }}\n                            name=\"isCloseUse\"\n                            label=\"\"\n                            initialValue={0}>\n                            <Radio.Group options={closeButtonUseOptions} />\n                        </Form.Item>\n                        <Form.Item\n                            labelCol={{ span: 0 }}\n                            wrapperCol={{ span: 10 }}\n                            name=\"isButton\"\n                            label=\"\"\n                            initialValue={0}>\n                            <Radio.Group options={closeButtonCookieOptions} />\n                        </Form.Item>\n                    </Space>\n                </Col>\n\n                <Col className=\"label\" span={4}>\n                    버튼 설정\n                </Col>\n                <Col className=\"data\" span={20}>\n                    <Row justify=\"start\">\n                        <Form.Item name=\"isConfirm\" label=\"\" style={{ width: '320px' }} initialValue={0}>\n                            <Radio.Group options={buttonOptions} onChange={onChangeButtonSet} />\n                        </Form.Item>\n\n                        {visibleUrlInput && (\n                            <>\n                                <Form.Item\n                                    name=\"noticeTargetIds\"\n                                    label=\"\"\n                                    initialValue=\"\"\n                                    style={{ width: '400px', marginLeft: '0px', marginRight: '0px' }}>\n                                    <Input />\n                                </Form.Item>\n                            </>\n                        )}\n                    </Row>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\nexport default NoticeForm;\n","import React, { useState, useEffect } from 'react';\nimport modal from 'helper/customModal';\nimport moment from 'moment';\nimport useUser from 'hooks/user';\nimport { Row, Button, Breadcrumb, Form } from 'antd';\nimport { isEmpty, uniqueId } from 'lodash';\nimport { getNotice, postNotices } from 'api/partner/noticesApi';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useLoding from 'hooks/useLoding';\nimport NoticeForm from '../comp/PopupForm';\n\nconst AddPopupContainer: React.FunctionComponent = () => {\n    const [rowDatas, setRowDatas] = useState<any>([]);\n    const { userInfo } = useUser();\n    const [content, setContent] = useState<any>();\n    const [isChaged, setIsChaged] = useState<boolean>(false);\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const [uploadFiles, setUploadFiles] = useState<File[]>([]);\n    const { setLoading } = useLoding();\n\n    useEffect(() => {\n        return () => {\n            form.resetFields();\n            setContent('');\n            setIsChaged(false);\n            setUploadFiles([]);\n        };\n    }, []);\n\n    const onPreview = (values: any) => {\n        alert('미리보기');\n    };\n\n    const onFinish = (values: any) => {\n        form.validateFields().then(values => {\n            const params = { ...values, isTopFix: values.isTopFix ? 1 : 0 };\n            const formData = new FormData();\n\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null) {\n                    formData.append(key, params[key]);\n                } else if (key === 'articleIdx') {\n                    formData.append('articleIdx', '');\n                }\n            });\n            if (uploadFiles) {\n                uploadFiles.forEach(element => {\n                    formData.append('files', element);\n                });\n            }\n            setLoading(\n                postNotices(formData, data => {\n                    if (data?.message.indexOf('성공') > -1) {\n                        // modal.info('저장 되었습니다.');\n                        history.push('/partner/notice/list');\n                    } else {\n                        modal.warn('저장에 실패 했습니다.');\n                    }\n                })\n            );\n        });\n    };\n\n    return (\n        <>\n            <section className=\"page_content\">\n                <Breadcrumb className=\"title-navi__navi\">\n                    <Breadcrumb.Item className=\"title-navi__navi__home\">팝업관리</Breadcrumb.Item>\n                    <Breadcrumb.Item className=\"title-navi__navi__parent\">팝업 등록</Breadcrumb.Item>\n                </Breadcrumb>\n                <NoticeForm\n                    form={form}\n                    content={content}\n                    uploadFiles={uploadFiles}\n                    setUploadFiles={setUploadFiles}\n                    setContent={setContent}\n                    setIsChaged={setIsChaged}\n                    userInfo={userInfo}\n                />\n                <Row justify=\"center\">\n                    <Button\n                        type=\"primary\"\n                        onClick={() => {\n                            if (isChaged) {\n                                modal.msg('104', '', () => {\n                                    history.goBack();\n                                });\n                            } else {\n                                history.goBack();\n                            }\n                        }}>\n                        이전\n                    </Button>\n                    <Button type=\"primary\" onClick={onPreview}>\n                        미리보기\n                    </Button>\n                    <Button type=\"primary\" onClick={onFinish}>\n                        등록\n                    </Button>\n                </Row>\n            </section>\n        </>\n    );\n};\n\nexport default AddPopupContainer;\n","import React from 'react';\nimport Container from './NewPopupContainer';\n\nconst PopupNew: React.FunctionComponent = () => {\n    const Header = {\n        title: ''\n    };\n\n    return <Container />;\n};\n\nexport default PopupNew;\n","export const useOptions = [\n    { label: '대기', value: 0 },\n    { label: '노출', value: 1 }\n];\n\nexport const typeOptions = [\n    { label: '타입 선택', value: 0 },\n    { label: '풀팝업', value: 1 },\n    { label: '바텀시트 팝업', value: 2 },\n    { label: '일반 팝업', value: 3 }\n];\n\nexport const companyOptions = [\n    { label: '전체', value: 0 },\n    { label: 'SK하이닉스', value: 1 },\n    { label: '삼성전자', value: 2 },\n    { label: 'LG전자', value: 3 },\n    { label: 'LG유플러스', value: 4 }\n];\n\nexport const projectOptions = [\n    { label: '전체', value: 0 },\n    { label: '2022 케어프로젝트', value: 1 },\n    { label: '2022 첼린지', value: 2 }\n];\n\nexport const closeButtonUseOptions = [\n    { label: '미사용', value: 0 },\n    { label: '사용', value: 1 }\n];\n\nexport const closeButtonCookieOptions = [\n    { label: '다시 보지 않기', value: 0 },\n    { label: '3일간', value: 1 },\n    { label: '5일간', value: 2 },\n    { label: '7일간', value: 3 }\n];\n\nexport const buttonOptions = [\n    { label: '확인(팝업 닫힘)', value: 0 },\n    { label: '자세히 보기(URL 연결)', value: 1 }\n];\n\nexport const dateTypeOptions = [\n    { label: '등록일', value: 0 },\n    { label: '최종수정일', value: 1 }\n];\n\nexport const InquiryUseOptions = [\n    { label: '전체', value: 0 },\n    { label: '노출', value: 1 },\n    { label: '대기', value: 2 },\n    { label: '종료', value: 3 }\n];\n"],"names":["props","downloadFiles","setDownloadFiles","readonly","setLoading","useLoding","useEffect","style","marginBottom","length","map","item","display","border","padding","marginTop","marginRight","fontSize","align","title","fileName","width","overflow","textOverflow","whiteSpace","cursor","marginLeft","onClick","apiFileDownload","idx","undefined","file","index","indexOf","newFileList","slice","splice","onRemove","size","uniqueId","form","defaultRange","useState","setRange","onChange","justify","name","label","initialValue","moment","mode","uploadFiles","content","setContent","setUploadFiles","boadrFiles","setBoadrFiles","setIsChaged","onClickDownLoad","userInfo","visibleUrlInput","setVisibleUrlInput","imgMsgValue","setImgMsgValue","fileMsg","onChangeNoticeTarget","e","layout","className","labelCol","span","wrapperCol","hidden","options","useOptions","typeOptions","companyOptions","projectOptions","rules","required","message","direction","maxCount","closeButtonUseOptions","closeButtonCookieOptions","buttonOptions","target","value","useUser","isChaged","history","useHistory","Form","resetFields","type","modal","goBack","values","alert","validateFields","then","params","isTopFix","formData","FormData","Object","keys","forEach","key","append","element","postNotices","data","push","dateTypeOptions","InquiryUseOptions"],"sourceRoot":""}